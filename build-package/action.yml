name: Build and Package Lambda
description: "Instala depend√™ncias, compila o TypeScript e empacota a Lambda com node_modules"

inputs:
  project_name:
    description: "Nome do projeto (usado para nomear o arquivo zip da Lambda)"
    required: true
  lambda_source_path:
    description: "Caminho para o diret√≥rio da Lambda (default: .)"
    required: false
    default: "."

runs:
  using: composite
  steps:
    # -------------------------------
    # üì¶ DEPENDENCIES & BUILD
    # -------------------------------
    - name: Install dependencies
      shell: bash
      run: |
        set -e
        cd "${{ inputs.lambda_source_path }}"
        npm install
    - name: Build TypeScript
      shell: bash
      run: |
        cd "${{ inputs.lambda_source_path }}"
        npm run build
        set +e

    # -------------------------------
    # üìÅ PACKAGE LAMBDA FUNCTION
    # -------------------------------
    - name: Create Lambda ZIP with node_modules
      shell: bash
      run: |
        set -e

        cd "${{ inputs.lambda_source_path }}"

        if [ ! -d "dist" ]; then
          echo "‚ùå Diret√≥rio 'dist' n√£o encontrado. Verifique se o build foi bem-sucedido."
          exit 1
        fi

        echo "üßπ Limpando diret√≥rio lambda-package anterior (se existir)..."
        rm -rf lambda-package

        mkdir -p lambda-package
        cp -r dist/* lambda-package/
        cp -r node_modules lambda-package/
        cp package*.json lambda-package/

        cd lambda-package
        zip -r ../${{ inputs.project_name }}.zip .

        echo "‚úÖ Lambda empacotada como '${{ inputs.project_name }}.zip'"
        set +e
