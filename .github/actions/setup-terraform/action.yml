name: Setup and Initialize Terraform
description: "Configura o Terraform, inicializa e seleciona o workspace com vari√°veis do projeto"

inputs:
  terraform_version:
    description: Vers√£o do Terraform
    required: false
    default: '1.5.6'
  environment:
    description: "Nome do ambiente (ex: dev, prod, preview)"
    required: true
  project_name:
    description: Nome do projeto
    required: true
  s3_bucket_name:
    description: Nome do bucket S3
    required: true
  aws_access_key_id:
    description: AWS Access Key ID
    required: true
  aws_secret_access_key:
    description: AWS Secret Access Key
    required: true

runs:
  using: composite
  steps:
      # -------------------------------
    # üõ†Ô∏è SETUP TERRAFORM
    # -------------------------------    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    # -------------------------------
    # üì¶ TERRAFORM INIT & WORKSPACE
    # -------------------------------     
    - name: Terraform Init and Workspace
      shell: bash
      run: |
        terraform init

        if terraform workspace list | grep -q "${{ inputs.environment }}"; then
          terraform workspace select ${{ inputs.environment }}
        else
          terraform workspace new ${{ inputs.environment }}
        fi

        terraform workspace show
      working-directory: terraform
      env:
        TF_VAR_project_name: ${{ inputs.project_name }}
        TF_VAR_s3_bucket_name: ${{ inputs.s3_bucket_name }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}

    # -------------------------------
    # üì¶ VALIDATE TERRAFORM INIT
    # -------------------------------     
    - name: Validar Terraform Init
      shell: bash
      run: |
        if [ ! -d ".terraform" ]; then
          echo "‚ùå Terraform init n√£o foi conclu√≠do. Abortando."
          exit 1
        else
          echo "‚ôªÔ∏è Terraform init executado com sucesso!."
        fi
      working-directory: terraform
      env:
        TF_VAR_project_name: ${{ inputs.project_name }}
        TF_VAR_s3_bucket_name: ${{ inputs.s3_bucket_name }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
